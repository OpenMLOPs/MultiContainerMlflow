#For finding ip of container 172.18.0.2/16
version: "0.1"
name: mflowtrackingserver

services:
  ui:
    container_name: mlflow-ui
    build:
      dockerfile: ./ui/Dockerfile.mlflow
    ports:
      - "5000:5000"
    # command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mlflow-db:3306/${MYSQL_DATABASE} #--default-artifact-root ${ARTIFACT_ROOT} --host 0.0.0.0 --port 5000
    command: mlflow server --backend-store-uri mysql+pymysql://myUser:myUser@db:3306/mlflow --default-artifact-root ./mlruns --host 0.0.0.0 --port 5000

  #   mysql:
  #     container_name: mysql
  #     image: "mysql/mysql-server:8.0"
  #     restart: on-failure
  #     command: --default-authentication-plugin=mysql_native_password
  #     expose:
  #       - "3306"
  #     environment:
  #       MYSQL_ALLOW_EMPTY_PASSWORD: 1
  #       MYSQL_DATABASE: db
  #       MYSQL_ROOT_PASSWORD: dbpass
  #       MYSQL_ROOT_HOST: "%"
  #       MYSQL_USER: dbuser
  #       MYSQL_PASSWORD: dbpass
  #   adminer:
  #     container_name: adminer
  #     image: adminer
  #     restart: always
  #     ports:
  #       - "8080:8080"
  #     depends_on:
  #       - mysql
  # volumes:
  #   mysql:
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: myUserPass
      MYSQL_DATABASE: mlflow
      MYSQL_USER: myUser
      MYSQL_PASSWORD: myUser

  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - 8088:80
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: myUserPass
  # If you are modifying image in that case use below commands
  # docker-compose build --no-cache
  # docker-compose up -d
  # docker-compose rm -v
  # docker-compose --env-file .env  up -d 
